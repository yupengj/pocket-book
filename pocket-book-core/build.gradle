/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'


version = '1.0.0-SNAPSHOT'
sourceCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    implementation 'org.apache.httpcomponents:httpclient:4.5.6'
    compile('org.ansj:ansj_seg:5.1.6')
    
    
    compile('org.springframework.boot:spring-boot-starter:2.1.0.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-web:2.1.0.RELEASE')
   // compile('org.springframework.boot:spring-boot-starter-data-jpa')
    //compile('postgresql:postgresql:9.1-901-1.jdbc4')
    //compile('org.postgresql:postgresql')
    
    
    //testCompile("org.springframework.boot:spring-boot-starter-test") 
}